<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-05-10T10:00:38+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">EMBEDIN</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">real time systems - Intro</title><link href="http://localhost:4000/real/time/system/series/2024/05/09/intro-to-rts.html" rel="alternate" type="text/html" title="real time systems - Intro" /><published>2024-05-09T00:00:00+02:00</published><updated>2024-05-09T00:00:00+02:00</updated><id>http://localhost:4000/real/time/system/series/2024/05/09/intro-to-rts</id><content type="html" xml:base="http://localhost:4000/real/time/system/series/2024/05/09/intro-to-rts.html"><![CDATA[<ul>
  <li>A real-time system is characterized by its ability to produce the expected result within a time (to meet deadlines) and time synchronization <br />
between different tasks</li>
  <li>classification:
    <ul>
      <li>Hard real-time systems: missing deadlines, can cause system failure, human loss
        <ul>
          <li>examples: Mars rover, medical devices and mission-critical systems</li>
        </ul>
      </li>
      <li>Soft real-time systems: missing deadlines, can cause low quality output, with small or insignificant consequences
        <ul>
          <li>examples: personal computers, audio-systems not responding on time</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>Features:</p>
<ul>
  <li>reliability, safety, maintainability, availability and security</li>
  <li>Time constraints:
    <ul>
      <li>event response (interrupt latency)</li>
      <li>scheduling (jitter between task switching)</li>
    </ul>
  </li>
  <li><a href="https://www.allaboutcircuits.com/technical-articles/introduction-to-real-time-embedded-systems/">Into-to-real-time-systems</a></li>
  <li>Therefore, we need a design and implementation to monitor and maintain such kind of a systems</li>
  <li>Real Time Operating Systems (RTOS) provide such solutions:
    <ul>
      <li>design patterns for scheduling (non-preemptive and preemptive) and queueing</li>
      <li>smaller foot print of kernel</li>
      <li>task priority, multi-threading, synchronization, Inter processor communications (IPC) mechanisms, interrupt handling</li>
      <li>file system handling, debugging, tracking/monitoring of tasks</li>
      <li>SysTick timer along with scheduler, handles the task switching</li>
      <li><a href="https://www.allaboutcircuits.com/technical-articles/introduction-to-microcontroller-timers-periodic-timers/">SysTick-timer</a></li>
    </ul>
  </li>
  <li>RTOS examples: FreeRTOS, QNX</li>
</ul>

<p>In essence, achieving real-time systems necessitates a meticulous customization of both hardware and software components.</p>]]></content><author><name></name></author><category term="Real" /><category term="time" /><category term="system" /><category term="series" /><summary type="html"><![CDATA[A real-time system is characterized by its ability to produce the expected result within a time (to meet deadlines) and time synchronization between different tasks classification: Hard real-time systems: missing deadlines, can cause system failure, human loss examples: Mars rover, medical devices and mission-critical systems Soft real-time systems: missing deadlines, can cause low quality output, with small or insignificant consequences examples: personal computers, audio-systems not responding on time]]></summary></entry></feed>